{% set name = "libcusolver" %}
{% set version = "11.4.3.1" %}
{% set cuda_version = "12.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: c9460db500d0c7d14debb2c8e0d88fc26a39197363f1b000ccf760866f636f12  # [linux64]
  sha256: bf3c9a090652d011aafe2190c6f26fe108194cf8512d3c571e406054740168bb  # [ppc64le]
  sha256: 0ca46b73520657f96f921711c05af7053bd398328d510aecddfff2521c000e91  # [aarch64]
  sha256: f4fd50ca109b8633409c26806dac80f2cb0cf9e8d715158c1addee1403ce9792  # [win]

build:
  number: 0
  skip: true  # [osx]

outputs:
  - name: libcusolver
    files:
      - lib/libcusolver*.so.*                            # [linux]
      - targets/{{ target_name }}/lib/libcusolver*.so.*  # [linux]
      - Library\bin\cusolver*.dll                        # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} 2.17    # [linux]
      host:
        - cuda-version {{ cuda_version }}
        - libcublas
        - libnvjitlink
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_compatible("libcublas", max_pin="x.x") }}
        - {{ pin_compatible("libnvjitlink", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -L $PREFIX/lib/libcusolver.so.{{ version }}                  # [linux]
        - test -L $PREFIX/lib/libcusolver.so.{{ version.split(".")[0] }}    # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcusolver.so.{{ version }}                  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcusolver.so.{{ version.split(".")[0] }}    # [linux]
        - test -L $PREFIX/lib/libcusolverMg.so.{{ version }}                # [linux]
        - test -L $PREFIX/lib/libcusolverMg.so.{{ version.split(".")[0] }}  # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcusolverMg.so.{{ version }}                # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcusolverMg.so.{{ version.split(".")[0] }}  # [linux]
        - if not exist %LIBRARY_BIN%\cusolver*.dll exit 1                  # [win]
        - if not exist %LIBRARY_BIN%\cusolverMg*.dll exit 1                # [win]
    about:
      home: https://developer.nvidia.com/cusolver
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Linear Solver Library
      description: |
        cuSOLVER - Direct Linear Solvers on NVIDIA GPUs
      doc_url: https://docs.nvidia.com/cuda/cusolver/

  - name: libcusolver-dev
    build:
      run_exports:
        - {{ pin_subpackage("libcusolver", max_pin="x") }}
    files:
      - lib/libcusolver*.so               # [linux]
      - lib/pkgconfig                     # [linux]
      - targets/{{ target_name }}/include              # [linux]
      - targets/{{ target_name }}/lib/libcusolver*.so  # [linux]
      - targets/{{ target_name }}/lib/stubs            # [linux]
      # Not shipping Fortran bindings (in src) on Windows for now
      - targets/{{ target_name }}/libcusolver/src      # [linux]
      - Library\include                                # [win]
      - Library\lib                                    # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} 2.17    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("libcusolver", exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - libcusolver-static >={{ version }}      # [linux]
    test:
      commands:
        - test -L $PREFIX/lib/libcusolver.so                                # [linux]
        - test -L $PREFIX/lib/libcusolverMg.so                              # [linux]
        - test -f $PREFIX/lib/pkgconfig/cusolver*.pc                        # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cusolverDn.h                   # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cusolverMg.h                   # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cusolverRf.h                   # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cusolverSp.h                   # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cusolverSp_LOWLEVEL_PREVIEW.h  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cusolver_common.h              # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcusolver.so                     # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcusolverMg.so                   # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libcusolver.so               # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libcusolverMg.so             # [linux]
        - if not exist %LIBRARY_INC%\cusolverDn.h exit 1                   # [win]
        - if not exist %LIBRARY_INC%\cusolverMg.h exit 1                   # [win]
        - if not exist %LIBRARY_INC%\cusolverRf.h exit 1                   # [win]
        - if not exist %LIBRARY_INC%\cusolverSp.h exit 1                   # [win]
        - if not exist %LIBRARY_INC%\cusolverSp_LOWLEVEL_PREVIEW.h exit 1  # [win]
        - if not exist %LIBRARY_INC%\cusolver_common.h exit 1              # [win]
        - if not exist %LIBRARY_LIB%\cusolver*.lib exit 1                  # [win]
        - if not exist %LIBRARY_LIB%\cusolverMg*.lib exit 1                # [win]
    about:
      home: https://developer.nvidia.com/cusolver
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Linear Solver Library
      description: |
        cuSOLVER - Direct Linear Solvers on NVIDIA GPUs
      doc_url: https://docs.nvidia.com/cuda/cusolver/index.html

  - name: libcusolver-static
    build:
      skip: true  # [win]
    files:
      - targets/{{ target_name }}/lib/libcusolver*_static.a
      - targets/{{ target_name }}/lib/libmetis_static.a
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} 2.17    # [linux]
      host:
        - cuda-version {{ cuda_version }}
        - libcublas-static
        - libcusparse-static
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_compatible("libcublas-static", max_pin="x.x") }}
        - {{ pin_compatible("libcusparse-static", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcusolver_static.a
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcusolver_lapack_static.a
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcusolver_metis_static.a
        - test -f $PREFIX/targets/{{ target_name }}/lib/libmetis_static.a
    about:
      home: https://developer.nvidia.com/cusolver
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA Linear Solver Library
      description: |
        cuSOLVER - Direct Linear Solvers on NVIDIA GPUs
      doc_url: https://docs.nvidia.com/cuda/cusolver/index.html

about:
  home: https://developer.nvidia.com/cusolver
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: CUDA Linear Solver Library
  description: |
    cuSOLVER - Direct Linear Solvers on NVIDIA GPUs
  doc_url: https://docs.nvidia.com/cuda/cusolver/index.html

extra:
  recipe-maintainers:
    - adibbley
